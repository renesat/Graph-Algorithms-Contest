#+TITLE: Задачи на поиск в глубину
#+LANGUAGE: russian
#+OPTIONS: date:nil toc:nil todo:nil num:nil title:nil

#+LATEX_CLASS: empty
#+LATEX_COMPILER: xelatex
#+LATEX_HEADER: \usepackage{longtable}
#+LATEX_HEADER: \usepackage{wrapfig}
#+LATEX_HEADER: \usepackage{rotating}
#+LATEX_HEADER: \usepackage[normalem]{ulem}
#+LATEX_HEADER: \usepackage{amsmath}
#+LATEX_HEADER: \usepackage{breqn}
#+LATEX_HEADER: \usepackage{textcomp}
#+LATEX_HEADER: \usepackage{amssymb}
#+LATEX_HEADER: \usepackage{capt-of}
#+LATEX_HEADER: \usepackage{hyperref}
#+LATEX_HEADER: \usepackage{minted}
#+LATEX_HEADER: \usepackage{polyglossia}
#+LATEX_HEADER: \setmainlanguage{russian}
#+LATEX_HEADER: \setotherlanguage{english}
#+LATEX_HEADER: \setkeys{russian}{babelshorthands=true}
#+LATEX_HEADER: \PolyglossiaSetup{russian}{indentfirst=true}
#+LATEX_HEADER: \usepackage{fontspec}
#+LATEX_HEADER: \setmainfont{Liberation Serif}
#+LATEX_HEADER: \usepackage{minted}
#+LATEX_HEADER: \usepackage[left=4cm,right=4cm, top=2cm,bottom=2cm,bindingoffset=0cm]{geometry}
#+LATEX_HEADER: \usepackage{xcolor}
#+LATEX_HEADER: \PassOptionsToPackage{final}{graphicx}
#+LATEX_HEADER: \usepackage{caption}
#+LATEX_HEADER: \usepackage{subcaption}
#+LATEX_HEADER: \usepackage{wrapfig}
#+LATEX_HEADER: \usepackage{array}
#+LATEX_HEADER: \definecolor{friendlybg}{HTML}{f0f0f0}


* DONE Задача 1
# Source: https://codeforces.com/problemset/problem/34/D

В небольшой стране $n$ городов.
Каждый город имеет номер — целое число от $1$ до $n$.
Столица имеет номер $g_{1}$.
Дороги между городами двухсторонние, причем
есть только один путь от столицы до каждого города.

Карта хранится в следующем виде:
для каждого не столичного города $i$ хранится число $r_{i}$ -
номер последнего города на пути из столицы в город $i$.

Было решено перенести столицу из города $g_{1}$ в город $g_{2}$.
После этого старое представление карты перестало быть верным.
Необходимо найти новое представление карты дорог в описанном выше виде.

* DONE Задача 2
# Source: https://codeforces.com/problemset/problem/1167/C

Имеется $n$ людей. Они общаются в $m$ группах.
Человек $x$ узнает новость из внешнего источника.
Затем этот пользователь отправляет новость всем своим друзьям
(друзья если оба общаются в какой-нибудь группе).
Друзья сообщают новость своим друзьям и тд.
Это происходит до того, как не останется пары друзе, в которой один
знает новость, а другой - нет.

Группы заданы списком групп состоязщих из списков участников группы.

Для каждого пользователя необходимо определить сколько пользователей узнает
новость, если он начнет её распространять.
Тоесть необходимо получить список из количество узнавших новость для каждого человека.

* DONE Задача 3
# Source: https://codeforces.com/problemset/problem/62/D

В старом доме Антона был определён план
расположения комнат и коридоров между ними.
Коридоры двусторонние.
Комнаты пронумерованы от $1$ до $n$.

Антон хочет, чтобы новый дом выглядел также как и предыдущий.
Для этого в нем должно быть $n$ комнат и если существовал
коридор из $i$ в $j$, то он есть в новом доме.

Антон строит дом так, что он начинает строить коридор из
некоторой комнаты и пробивает их до тех пор, пока
не получит все коридоры и вернётся в начальную комнату.

Также известно, что Антон строит, не прерываясь, то есть пока не
закончит строительство. По уже построенным коридорам он не ходит.

Антону скучно строить коридоры в одном порядке. Поэтому он,
зная порядок построения коридоров в предыдущем доме, хочет
построить коридоры в другом порядке.
Этот порядок представляет собой список комнат в процессе их
посещения.
Новый список должен быть лексикографически наименьший,
но строго больше предыдущего.

Дан список описывающий старый маршрут.
Гарантируется, что последнее число в этом списке
совпадает с первым.
Первая комната - это главный вход, поэтому Антон всегда
должен начинать строить именно с неё.

Можете предполагать, что ни одна комната не соединена сама
с собой коридором, и если существует коридор между
некоторой парой комнат, то только один.
В то же время, могут существовать изолированные комнаты,
не соединённые коридорами вообще.

На выходе должен получится либо список описывающий новый маршрут,
либо None если это невозможно.

* DONE Задача 4
# Source: https://codeforces.com/contest/1253/problem/D

Дан неориентированный граф из $n$ вершин
и $m$ ребер.
Вершины пронумерованы целыми числами от $1$ до $n$.
Граф простой (без петель и между каждой парой вершин не более одного ребра).

*Граф гармоничный* если для каждой тройки целых чисел $(l,m,r)$, где
$1 \leq l < m < r \leq n$,
если есть путь из вершины $l$ в вершину $r$,
тогда существует путь из вершины $l$ в вершину $m$.

Тоесть, в гармоничном графе, если из вершины $l$
можно по ребрам дойти до вершины
$r$ ($l<r$), тогда также должно быть можно
дойти до вершин $(l+1),(l+2),\dots,(r−1)$.

Найдите минимальное число ребер которых надо добавить в граф,
чтобы он стал гармоничным.

* DONE Задача 5
# Source: https://codeforces.com/problemset/problem/117/C

Турнир — ориентированный граф без петель, в котором каждая
пара вершин соединена ровно одним ребром.
Для любых двух вершин $u$ и $v$ ($u \neq v$) либо есть ребро из
$u$ в $v$, либо есть ребро из $v$ в $u$.

Дан турнир из $n$ вершин.
Он задан матрицой смежности.
Требуется найти в нем цикл длины три.
