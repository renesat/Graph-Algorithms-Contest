#+TITLE: Задачи на поиск в глубину
#+LANGUAGE: russian
#+OPTIONS: date:nil toc:nil todo:nil num:nil title:nil

#+LATEX_CLASS: empty
#+LATEX_COMPILER: xelatex
#+LATEX_HEADER: \usepackage{longtable}
#+LATEX_HEADER: \usepackage{wrapfig}
#+LATEX_HEADER: \usepackage{rotating}
#+LATEX_HEADER: \usepackage[normalem]{ulem}
#+LATEX_HEADER: \usepackage{amsmath}
#+LATEX_HEADER: \usepackage{breqn}
#+LATEX_HEADER: \usepackage{textcomp}
#+LATEX_HEADER: \usepackage{amssymb}
#+LATEX_HEADER: \usepackage{capt-of}
#+LATEX_HEADER: \usepackage{hyperref}
#+LATEX_HEADER: \usepackage{minted}
#+LATEX_HEADER: \usepackage{polyglossia}
#+LATEX_HEADER: \setmainlanguage{russian}
#+LATEX_HEADER: \setotherlanguage{english}
#+LATEX_HEADER: \setkeys{russian}{babelshorthands=true}
#+LATEX_HEADER: \PolyglossiaSetup{russian}{indentfirst=true}
#+LATEX_HEADER: \usepackage{fontspec}
#+LATEX_HEADER: \setmainfont{Liberation Serif}
#+LATEX_HEADER: \usepackage{minted}
#+LATEX_HEADER: \usepackage[left=4cm,right=4cm, top=2cm,bottom=2cm,bindingoffset=0cm]{geometry}
#+LATEX_HEADER: \usepackage{xcolor}
#+LATEX_HEADER: \PassOptionsToPackage{final}{graphicx}
#+LATEX_HEADER: \usepackage{caption}
#+LATEX_HEADER: \usepackage{subcaption}
#+LATEX_HEADER: \usepackage{wrapfig}
#+LATEX_HEADER: \usepackage{array}
#+LATEX_HEADER: \definecolor{friendlybg}{HTML}{f0f0f0}


* DONE Задача 1
# Source: https://codeforces.com/problemset/problem/34/D

** Постановка

В небольшой стране $n$ городов.
Каждый город имеет номер — целое число от $1$ до $n$.
Столица имеет номер $g_{1}$.
Дороги между городами двухсторонние, причем
есть только один путь от столицы до каждого города.

Карта хранится в следующем виде:
для каждого не столичного города $i$ хранится число $r_{i}$ -
номер последнего города на пути из столицы в город $i$.

Было решено перенести столицу из города $g_{1}$ в город $g_{2}$.
После этого старое представление карты перестало быть верным.
Необходимо найти новое представление карты дорог в описанном выше виде.

** Входные данные

Первая строка содержит следующие 3 числа:
$n$, $g_{1}$, $g_{2}$,
ограниченные следующими условиями
$2 \leq n \leq 5 \cdot 10^{4}$ и $1 \leq g_{1} \neq g_{2} \leq n$.
количество городов,
номер старой столицы и номер новой столицы соответственно.

Следующая строка содержит $n-1$ чисел - старое представление карты дорог.

Для всех городов за исключением $g_{1}$ задано целое число $p_{i}$
(номер последнего города на пути из столицы в город $i$).
Все города описаны в порядке увеличения номеров.

** Выходные данные

Выведите $n - 1$ чисел — новое представление карты дорог в том же формате.

** Пример 1

\begin{table}[H]
\begin{center}
\begin{tabular}{|m{4cm}|m{4cm}|}
\hline
Входные данные & Выходные данные \\ \hline
3 2 3

2 2
&
2 3
\\ \hline
\end{tabular}
\end{center}
\end{table}

** Пример 2

\begin{table}[H]
\begin{center}
\begin{tabular}{|m{4cm}|m{4cm}|}
\hline
Входные данные & Выходные данные \\ \hline
6 2 4

6 1 2 4 2
&
6 4 1 4 2
\\ \hline
\end{tabular}
\end{center}
\end{table}

\pagebreak
* DONE Задача 2
# Source: https://codeforces.com/problemset/problem/1167/C
** Постановка

Имеется $n$ людей. Они общаются в $m$ группах.
Человек $x$ узнает новость из внешнего источника.
Затем этот пользователь отправляет новость всем своим друзьям
(друзья если оба общаются в какой-нибудь группе).
Друзья сообщают новость своим друзьям и тд.
Это происходит до того, как не останется пары друзе, в которой один
знает новость, а другой - нет.

Для каждого пользователя необходимо определить сколько пользователей узнает
новость, если он начнет её распространять.

** Входные данные

В первой строке записаны два целых числа $n$ и $m$
($1 \leq n$, $m \leq 5 \cdot 10^{5}$) — количество пользователей и групп, соответственно.

Далее следуют $m$ строк с описанием групп.
Строка $i$ начинается целым числом $0 \leq g_{i} \leq n$ — количество пользователей в
группе $i$.
Далее следуют $g_{i}$ чисел, обозначающих пользователей.
$\sum_{i=1}^{m} k_{i} \leq 5 \cdot 10^{5}$.

** Выходные данные

Выведите $n$ целых чисел
равных количеству узнавших новость для каждого человека.

** Пример

\begin{table}[H]
\begin{center}
\begin{tabular}{|m{4cm}|m{4cm}|}
\hline
Входные данные & Выходные данные \\ \hline
7 5

3 2 5 4

0

2 1 2

1 1

2 6 7
&
4 4 1 4 4 2 2
\\ \hline
\end{tabular}
\end{center}
\end{table}

\pagebreak
* DONE Задача 3
# Source: https://codeforces.com/problemset/problem/62/D

** Постановка

В старом доме Антона был определён план
расположения комнат и коридоров между ними.
Коридоры двусторонние.
Комнаты пронумерованы от $1$ до $n$.

Антон хочет, чтобы новый дом выглядел также как и предыдущий.
Для этого в нем должно быть $n$ комнат и если существовал
коридор из $i$ в $j$, то он есть в новом доме.

Антон строит дом так, что он начинает строить коридор из
некоторой комнаты и пробивает их до тех пор, пока
не получит все коридоры и вернётся в начальную комнату.

Также известно, что Антон строит, не прерываясь, то есть пока не
закончит строительство. По уже построенным коридорам он не ходит.

Антону скучно строить коридоры в одном порядке. Поэтому он,
зная порядок построения коридоров в предыдущем доме, хочет
построить коридоры в другом порядке.
Этот порядок представляет собой список комнат в процессе их
посещения.
Новый список должен быть лексикографически наименьший,
но строго больше предыдущего.

** Входные данные

В первой строке - два целых числа $n$ и $m$
($3 \leq n \leq 10^{2}$, $3 \leq m \leq 2\cdot 10^{3}$) — количество комнат и коридоров в
доме Антона.
В следующей строке записано $m + 1$ чисел, не превышающих $n$:
описание старого маршрута в виде списка комнат,
которые он посещал.
Гарантируется, что последнее число в этом списке
совпадает с первым.

Первая комната - это главный вход, поэтому Антон всегда
должен начинать строить именно с неё.

Можете предполагать, что ни одна комната не соединена сама
с собой коридором, и если существует коридор между
некоторой парой комнат, то только один.
В то же время, могут существовать изолированные комнаты,
не соединённые коридорами вообще.

** Выходные данные

Выведите $m + 1$ чисел, не превышающих $n$:
описание нового маршрута, в соответствии с которым он должен
построить новый дом.
Если такого маршрута не существует, выведите *None*.

** Пример 1

\begin{table}[H]
\begin{center}
\begin{tabular}{|m{4cm}|m{4cm}|}
\hline
Входные данные & Выходные данные \\ \hline
3 3

1 2 3 1
&
1 3 2 1
\\ \hline
\end{tabular}
\end{center}
\end{table}

** Пример 2

\begin{table}[H]
\begin{center}
\begin{tabular}{|m{4cm}|m{4cm}|}
\hline
Входные данные & Выходные данные \\ \hline
3 3

1 3 2 1
&
None
\\ \hline
\end{tabular}
\end{center}
\end{table}

\pagebreak
* DONE Задача 4
# Source: https://codeforces.com/contest/1253/problem/D
** Постановка

Дан неориентированный граф из $n$ вершин
и $m$ ребер.
Вершины пронумерованы целыми числами от $1$ до $n$.

*Граф гармоничный* если для каждой тройки целых чисел $(l,m,r)$, где
$1 \leq l < m < r \leq n$,
если есть путь из вершины $l$ в вершину $r$,
тогда существует путь из вершины $l$ в вершину $m$.

Тоесть, в гармоничном графе, если из вершины $l$
можно по ребрам дойти до вершины
$r$ ($l<r$), тогда также должно быть можно
дойти до вершин $(l+1),(l+2),\dots,(r−1)$.

Найдите минимальное число ребер которых надо добавить в граф,
чтобы он стал гармоничным.

** Входные данные

В первой строке - два целых числа
$n$ и $m$ ($3 \leq n \leq 2 \cdot 10^{5}$ и $1 \leq m \leq 2 \cdot 10^{5}a$).

В следующих $m$ строках записаны по два целых числа
$t_{i}$ и $g_{i}$ ($1 \leq t_{i}, g_{i} \leq n$, $t_{i} \neq g_{i}$),
описывающих ребро между вершинами $t$ и $g$.

Граф простой (без петель и между каждой парой вершин не более одного ребра).

** Выходные данные

Минимальное количество ребер которое необходимо добавить в граф.

** Пример

\begin{table}[H]
\begin{center}
\begin{tabular}{|m{4cm}|m{4cm}|}
\hline
Входные данные & Выходные данные \\ \hline
14 8

1 2

2 7

3 4

6 3

5 7

3 8

6 8

11 12
&
1
\\ \hline
\end{tabular}
\end{center}
\end{table}


\pagebreak

* DONE Задача 5
# Source: https://codeforces.com/problemset/problem/117/C
** Постановка

Турнир — ориентированный граф без петель, в котором каждая
пара вершин соединена ровно одним ребром.
Для любых двух вершин $u$ и $v$ ($u \neq v$) либо есть ребро из
$u$ в $v$, либо есть ребро из $v$ в $u$.

Дан турнир из $n$ вершин. Требуется найти в нем цикл длины три.

** Входные данные

В первой строке задано целое число $n$ ($1 \leq n \leq 5000$).
В следующих $n$ строках задана матрица смежности графа $G$.
$A_{ij}=1$ если есть ребро из $i$ в $j$, в противном случае ребра нет.

** Выходные данные

Выведите 3 номера вершин цикла если он есть. Если цикл длины 3 отсутствует, то
выведите *None*.
Если решений несколько, выведите любое.

** Пример 1

\begin{table}[H]
\begin{center}
\begin{tabular}{|m{4cm}|m{4cm}|}
\hline
Входные данные & Выходные данные \\ \hline
5

00100

10000

01001

11101

11000
&
1 3 2
\\ \hline
\end{tabular}
\end{center}
\end{table}

** Пример 2

\begin{table}[H]
\begin{center}
\begin{tabular}{|m{4cm}|m{4cm}|}
\hline
Входные данные & Выходные данные \\ \hline
5

01111

00000

01000

01100

01110
&
None
\\ \hline
\end{tabular}
\end{center}
\end{table}

\pagebreak
